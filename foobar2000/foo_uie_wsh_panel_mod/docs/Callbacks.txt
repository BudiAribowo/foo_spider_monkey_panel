// code: UTF16 encoded char.
// In order to use this callback, use window.DlgCode(DLGC_WANTCHARS);
// See flags.txt for DLGC_WANTCHARS.
function on_char(code) {}
// Called when colours are changed via default UI/columns UI preferences.
// use window.GetColourCUI/window.GetColorDUI to get new colours
function on_colors_changed() {}
// Called when "cursor follow playback" state is changed
// state: boolean, reflect current "cursor follow playback"  value
function on_cursor_follow_playback_changed(state) {}
// For on_drag_* callbacks, @feature "dragdrop" must be set in the preprocessor section.
// See preprocessors.txt for more details.
// See samples\Drag Drop Basic.txt for how to use "action".
function on_drag_drop(action, x, y, mask) {}
function on_drag_enter(action, x, y, mask) {}
function on_drag_leave() {}
function on_drag_over(action, x, y, mask) {}
// Called when the panel gets/loses focus
function on_focus(is_focused) {}
// Called when colours are changed via default UI/columns UI preferences
// Retrieve fonts using window.GetFontXXX() method.
function on_font_changed() {}
// Called when thread created by utils.GetAlbumArtAsync() is done.
// image_path will point to the image file (or music file if image is embedded)
function on_get_album_art_done(metadb, art_id, image, image_path) {}
// Called when playlist focus has been changed
function on_item_focus_change(playlist, from, to) {}
// Called when at least 60s of the track has been played or the track has reached 
// its end after at least 1/3 of it has been played through.
function on_item_played(metadb) {}
// Both keyboard related callbacks require "Grab focus" enabled in the Configuration window.
// In order to use arrow keys, use window.DlgCode(DLGC_WANTARROWS);
// See flags.txt for DLGC_WANTARROWS.
// You must return true to suppress processing keyboard shortcuts
// vkey: Virtual Key Code, refer to: http://msdn.microsoft.com/en-us/library/ms927178.aspx
function on_key_down(vkey) {}
function on_key_up(vkey) {}
// [new v1.5.9]
function on_library_items_added() {}
function on_library_items_removed() {}
function on_library_items_changed() {}
// Called when thread created by gdi.LoadImageAsync() is done.
function on_load_image_done(cookie, image) {}
// Called when metadb contents change.
// If you need your scripts to be compatible with component versions 1.5.12 and earlier, 
// you must check Preprocessors.txt for the @feature directives which need to be set.
// See samples\Watch Metadb Change.txt for example usage.
function on_metadb_changed(metadb_or_metadbs, fromhook) {}
// For all mouse callbacks, see flags.txt for "mask".
function on_mouse_lbtn_dblclk(x, y, mask) {}
function on_mouse_lbtn_down(x, y, mask) {}
function on_mouse_lbtn_up(x, y, mask) {}
function on_mouse_leave() {}
function on_mouse_mbtn_dblclk(x, y, mask) {}
function on_mouse_mbtn_down(x, y, mask) {}
function on_mouse_mbtn_up(x, y, mask) {}
function on_mouse_move(x, y, mask) {}
function on_mouse_rbtn_dblclk(x, y, mask) {}
function on_mouse_rbtn_down(x, y, mask) {}
// You must return true if you want to suppress the default context menu.
// Hold left shift + left windows key to bypass user code and open default context menu.
function on_mouse_rbtn_up(x, y, mask) {}
function on_mouse_wheel(step) {}
// Called in other panels after window.NotifyOthers(name, info) is executed
function on_notify_data(name, info) {}
// Called when window is ready to draw
// see interfaces.txt for all the methods used with gr
function on_paint(gr) {}
// Called when "playback follow cursor" state is changed
// state: boolean, reflect current "playback follow cursor" value
function on_playback_follow_cursor_changed(state) {}
// Dynamic info (VBR bitrate etc) change.
function on_playback_dynamic_info() {}
// Per-track dynamic info (stream track titles etc) change.
// Happens less often than on_playback_dynamic_info().
function on_playback_dynamic_info_track() {}
// Called when currently playing file gets edited.
function on_playback_edited(metadb) {}
function on_playback_new_track(metadb) {}
// Called when playback order is changed
// new_order_index:
// 0 Default
// 1 Repeat (Playlist)
// 2 Repeat (Track)
// 3 Random
// 4 Shuffle (tracks)
// 5 Shuffle (albums)
// 6 Shuffle (folders)
function on_playback_order_changed(new_order_index) {}
// state: true when paused, false when unpaused.
function on_playback_pause(state) {}
// origin: 0 user_added, 1 user_removed, 2 playback advance
function on_playback_queue_changed(origin) {}
// time: float value, in seconds.
function on_playback_seek(time) {}
// cmd: 0 default, 1 play, 2 next, 3 prev, 4 settrack, 5 rand, 6 resume.
function on_playback_starting(cmd, is_paused) {}
// reason: 0 user, 1 eof, 2 starting_another.
function on_playback_stop(reason) {}
// Called when "stop after current" is enabled/disabled.
// state: "stop after current" value, either true or false.
function on_playlist_stop_after_current_changed(state) {}
// Called every second, for time display.
// time - float value, in sec.
function on_playback_time(time) {}
function on_playlist_items_added(playlistIndex) {}
function on_playlist_item_ensure_visible(playlistIndex, item) {}
function on_playlist_items_removed(playlistIndex, new_count) {}
function on_playlist_items_reordered(playlistIndex) {}
function on_playlist_switch() {}
function on_playlists_changed() {}
// Always call window.GetBackgroundImage() during this callback
// IMPORTANT: DO NOT call window.Repaint()
function on_refresh_background_done() {}
// This callback is not guaranteed to be called during unloading.
function on_script_unload() {}
// Called when selection changes based on "File>Preferences>Display>Selection viewers".
function on_selection_changed() {}
// Called when panel is resized.
// IMPORTANT: DO NOT call window.Repaint()
function on_size() {}
// val: volume level in dB. minimum is -100. maximum is 0.
function on_volume_change(val) {}
